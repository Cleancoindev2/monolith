version: 2
jobs:
  vendor:
    docker:
      - image: quay.io/token/go-build:v0.3.3
    working_directory: /home/circleci/github.com/tokencard/contracts
    steps:
      - checkout
      - restore_cache:
          keys:
          - vendor-{{ checksum "go.sum" }}
      - run:
          name: "Setup custom environment variables"
          command: |
            echo 'export GO111MODULE="on"' >> $BASH_ENV # Redirect MY_ENV_VAR into $BASH_ENV
      - run: go mod vendor
      - save_cache:
          key: vendor-{{ checksum "go.sum" }}
          paths:
            - "vendor"

  build_artifacts:
    machine: true
    working_directory: /home/circleci/github.com/tokencard/contracts
    steps:
      - checkout
      - restore_cache:
          keys:
            - vendor-{{ checksum "go.sum" }}
      - run: ./build.sh
      - save_cache:
          key: artefacts-{{ .Revision }}
          paths:
            - "build"
            - "pkg/bindings"

  test:
    docker:
      - image: quay.io/token/go-build:v0.3.0
    working_directory:  /home/circleci/github.com/tokencard/contracts
    steps:
      - checkout
      - restore_cache:
          keys:
          - artefacts-{{ .Revision }}
      - run: go mod download
      - run: find .
      - run: go test -v ./test/...

  mythril:
    docker:
      - image: mythril/myth:0.19.3
    working_directory: /src
    steps:
      - checkout
      - run:
          command: myth -x ./contracts/oracle.sol
          no_output_timeout: 30m
      - run:
          command: myth -x ./contracts/wallet.sol
          no_output_timeout: 30m
      - run:
          command: myth -x ./contracts/licence.sol
          no_output_timeout: 30m

  snyk_check:
    docker:
      - image: quay.io/token/go-build:v0.3.0
    working_directory: /go/src/github.com/tokencard/contracts
    steps:
      - checkout
      - restore_cache:
          keys:
          - artefacts-{{ .Revision }}
      - run: mv /home/circleci/github.com/tokencard/contracts/pkg/bindings pkg
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: dep init --no-examples
      - run: dep ensure
      - run: apk add -U --no-cache nodejs nodejs-npm
      - run: npm config set unsafe-perm true
      - run: npm install -g snyk@1.101.1
      - run: snyk auth ${SNYK_TOKEN}
      - run: snyk test --org=token

  publish_github_release:
    docker:
      - image: cibuilds/github:0.10
    working_directory: /home/circleci/github.com/tokencard/contracts
    steps:
      - checkout
      - restore_cache:
          keys:
          - artefacts-{{ .Revision }}
      - run: git config --global user.email "circleci-build@tokencard.io"
      - run: git config --global user.name "CircleCI Build"
      - run: rm .gitignore
      - run: git add .
      - run: git commit -m "build artefacts [skip ci]"
      - run: git tag -f ${CIRCLE_TAG}
      - run: git push origin -f ${CIRCLE_TAG}
      # - run: export
      # - run: set -x; ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} .

workflows:
  version: 2
  build_deploy:
    jobs:
      - vendor:
          filters:
            tags:
              ignore: ""
      - build_artifacts:
          requires:
            - vendor
          filters:
            tags:
              ignore: ""
      - test:
          requires:
            - build_artifacts
          filters:
            tags:
              ignore: ""
      - mythril:
          filters:
            tags:
              ignore: ""
      - snyk_check:
          requires:
            - test
          context: snyk
      - publish_github_release:
          context: "github-releases"
          requires:
            - snyk_check
            - test
            - mythril
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
