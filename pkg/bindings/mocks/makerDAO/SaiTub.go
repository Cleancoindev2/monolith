// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package makerDAO

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SaiTubABI is the input ABI used to generate the binding from.
const SaiTubABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"join\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"skr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"era\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"}],\"name\":\"ink\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rho\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"air\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"rhi\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"flow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"}],\"name\":\"bite\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"draw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cupi\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"axe\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tag\",\"outputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"off\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vox\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"}],\"name\":\"rap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"wipe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gem\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tap_\",\"type\":\"address\"}],\"name\":\"turn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"per\",\"outputs\":[{\"name\":\"ray\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pip_\",\"type\":\"address\"}],\"name\":\"setPip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pie\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fit_\",\"type\":\"uint256\"},{\"name\":\"jam\",\"type\":\"uint256\"}],\"name\":\"cage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sai\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"param\",\"type\":\"bytes32\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"mold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tax\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"free\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mat\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pep\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"out\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"}],\"name\":\"shut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"give\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"chi\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"vox_\",\"type\":\"address\"}],\"name\":\"setVox\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pip\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pep_\",\"type\":\"address\"}],\"name\":\"setPep\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"}],\"name\":\"lad\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"din\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"ask\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"}],\"name\":\"safe\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pit\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"}],\"name\":\"tab\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"open\",\"outputs\":[{\"name\":\"cup\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tap\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cups\",\"outputs\":[{\"name\":\"lad\",\"type\":\"address\"},{\"name\":\"ink\",\"type\":\"uint256\"},{\"name\":\"art\",\"type\":\"uint256\"},{\"name\":\"ire\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"sai_\",\"type\":\"address\"},{\"name\":\"sin_\",\"type\":\"address\"},{\"name\":\"skr_\",\"type\":\"address\"},{\"name\":\"gem_\",\"type\":\"address\"},{\"name\":\"gov_\",\"type\":\"address\"},{\"name\":\"pip_\",\"type\":\"address\"},{\"name\":\"pep_\",\"type\":\"address\"},{\"name\":\"vox_\",\"type\":\"address\"},{\"name\":\"pit_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"lad\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cup\",\"type\":\"bytes32\"}],\"name\":\"LogNewCup\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}]"

// SaiTubBin is the compiled bytecode used for deploying new contracts.
var SaiTubBin = "0x6060604052341561000f57600080fd5b6040516101208062002a2383398101604052808051919060200180519190602001805191906020018051919060200180519190602001805191906020018051919060200180519190602001805160018054600160a060020a03191633600160a060020a031690811790915590925090507fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a260058054600160a060020a0319908116600160a060020a03898116919091179092556004805482168a84161790556002805482168c84161790556003805482168b8416179055600680548216888416179055600b80548216848416179055600880548216878416179055600980548216868416179055600780549091169184169190911790556b033b2e3c9fd0803ce8000000600c819055600e819055600f8190556010819055670de0b6b3a7640000601155601581905560165561017b64010000000061018d8102610a6c1704565b60145550610191975050505050505050565b4290565b61288280620001a16000396000f3006060604052600436106102b05763ffffffff60e060020a600035041663049878f381146102b5578063071bafb5146102cd5780630f8a771e146102fc57806312d43a511461030f57806313af403514610322578063143e55e0146103415780631f3634ed1461036657806320aba08b1461037c57806327e7e21e1461038f578063338a0261146103a2578063343aad82146103b5578063355274ea146103c857806340cc8854146103db578063440f19ba146103f1578063454a2ab31461040a5780634995543114610420578063509bf2bf1461043357806351f91066146104465780636626b26d1461045957806367550a35146104805780636c32c0a6146104935780636f78ee0d146104a657806373b38101146104bc5780637a9e5e4b146104d55780637bd2bea7146104f45780637e74325f146105075780637ec9c3b8146105265780637f8661a11461053957806382bf9a751461054f5780638a95a7461461056e5780638ceedb47146105815780638cf0c1911461059a5780638da5cb5b146105ad5780639166cba4146105c057806392b0d721146105d357806399c8d556146105ec5780639f678cca146105ff578063a5cd184e14610612578063ab0783da1461062b578063ace237f51461063e578063b2a1449b14610651578063b3b77a5114610664578063b84d21061461067d578063baa8529c14610693578063bf7e214f146106b5578063c8e13bb4146106c8578063c92aecc4146106db578063cf48d1a6146106ee578063d741e2f91461070d578063d9c27cc614610720578063ddca3f431461073f578063de5f551714610752578063e0ae96e914610768578063e47e7e661461077b578063e95823ad14610791578063f03c7c6e146107a7578063f7c8d634146107ba578063fcfff16f146107d0578063fd221031146107e3578063fdac0025146107f6575b600080fd5b34156102c057600080fd5b6102cb600435610849565b005b34156102d857600080fd5b6102e06109cd565b604051600160a060020a03909116815260200160405180910390f35b341561030757600080fd5b6102e06109dc565b341561031a57600080fd5b6102e06109eb565b341561032d57600080fd5b6102cb600160a060020a03600435166109fa565b341561034c57600080fd5b610354610a6c565b60405190815260200160405180910390f35b341561037157600080fd5b610354600435610a70565b341561038757600080fd5b610354610a85565b341561039a57600080fd5b610354610a8b565b34156103ad57600080fd5b610354610b05565b34156103c057600080fd5b6102cb610b16565b34156103d357600080fd5b610354610bb1565b34156103e657600080fd5b6102cb600435610bb7565b34156103fc57600080fd5b6102cb600435602435610e4b565b341561041557600080fd5b610354600435611077565b341561042b57600080fd5b6103546110af565b341561043e57600080fd5b6103546110b5565b341561045157600080fd5b6103546110bb565b341561046457600080fd5b61046c611149565b604051901515815260200160405180910390f35b341561048b57600080fd5b6102e0611152565b341561049e57600080fd5b610354611161565b34156104b157600080fd5b610354600435611167565b34156104c757600080fd5b6102cb600435602435611197565b34156104e057600080fd5b6102cb600160a060020a0360043516611422565b34156104ff57600080fd5b6102e0611494565b341561051257600080fd5b6102cb600160a060020a03600435166114a3565b341561053157600080fd5b610354611548565b341561054457600080fd5b6102cb600435611636565b341561055a57600080fd5b6102cb600160a060020a0360043516611793565b341561057957600080fd5b61035461182e565b341561058c57600080fd5b6102cb600435602435611889565b34156105a557600080fd5b6103546119d7565b34156105b857600080fd5b6102e06119dd565b34156105cb57600080fd5b6102e06119ec565b34156105de57600080fd5b6102cb6004356024356119fb565b34156105f757600080fd5b610354611c2c565b341561060a57600080fd5b6102cb611c32565b341561061d57600080fd5b6102cb600435602435611dd6565b341561063657600080fd5b610354611f47565b341561064957600080fd5b6102e0611f4d565b341561065c57600080fd5b61046c611f5c565b341561066f57600080fd5b6102cb600435602435611f6a565b341561068857600080fd5b6102cb6004356120ad565b341561069e57600080fd5b6102cb600435600160a060020a03602435166121ac565b34156106c057600080fd5b6102e061226e565b34156106d357600080fd5b61035461227d565b34156106e657600080fd5b610354612283565b34156106f957600080fd5b6102cb600160a060020a0360043516612294565b341561071857600080fd5b6102e061232f565b341561072b57600080fd5b6102cb600160a060020a036004351661233e565b341561074a57600080fd5b6103546123d9565b341561075d57600080fd5b6102e06004356123df565b341561077357600080fd5b6103546123fa565b341561078657600080fd5b61035460043561240a565b341561079c57600080fd5b61046c600435612423565b34156107b257600080fd5b6102e06124ca565b34156107c557600080fd5b6103546004356124d9565b34156107db57600080fd5b6103546124f7565b34156107ee57600080fd5b6102e06125d5565b341561080157600080fd5b61080c6004356125e4565b6040518085600160a060020a0316600160a060020a0316815260200184815260200183815260200182815260200194505050505060405180910390f35b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460125460ff16156108af57600080fd5b60006108ba8461240a565b116108c457600080fd5b600554600160a060020a03166323b872dd33306108e08761240a565b60006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561093857600080fd5b6102c65a03f1151561094957600080fd5b50505060405180519050151561095e57600080fd5b600454600160a060020a03166340c10f19338560405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b15156109b457600080fd5b6102c65a03f115156109c557600080fd5b505050505050565b600354600160a060020a031681565b600454600160a060020a031681565b600654600160a060020a031681565b610a1033600035600160e060020a031916612615565b1515610a1b57600080fd5b60018054600160a060020a031916600160a060020a038381169190911791829055167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b4290565b60009081526019602052604090206001015490565b60145481565b600454600090600160a060020a03166370a0823130836040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610ae657600080fd5b6102c65a03f11515610af757600080fd5b505050604051805191505090565b6000610b0f611c32565b5060165490565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a4610b8233600035600160e060020a031916612615565b1515610b8d57600080fd5b60125460ff161515610b9e57600080fd5b50506012805461ff001916610100179055565b600d5481565b6000806004356024358082600160a060020a033316600160e060020a031986351634873660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a4610c1685612423565b1580610c24575060125460ff165b1515610c2f57600080fd5b610c38856124d9565b600354600a54919550600160a060020a03908116916340c10f1991168660405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b1515610c9857600080fd5b6102c65a03f11515610ca957600080fd5b5050601754600087815260196020526040902060020154610cca925061270b565b60175560008581526019602052604081206002810182905560030155600c54610d7190610d6490610cfc90879061271b565b600754600160a060020a031663495d32cb6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610d4457600080fd5b6102c65a03f11515610d5557600080fd5b5050506040518051905061271b565b610d6c6110bb565b61275e565b600086815260196020526040902060010154909350831115610da25760008581526019602052604090206001015492505b600454600a54600160a060020a039182169163b753a98c91168560405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b1515610dff57600080fd5b6102c65a03f11515610e1057600080fd5b505050600085815260196020526040902060010154610e2f908461270b565b6000958652601960205260409095206001019490945550505050565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460125460ff1615610eb157600080fd5b60008481526019602052604090205433600160a060020a03908116911614610ed857600080fd5b6000610ee684610d6c612283565b11610ef057600080fd5b600084815260196020526040902060020154610f1790610f1285610d6c612283565b612782565b600085815260196020526040902060020155601754610f3c90610f1285610d6c612283565b601755600084815260196020526040902060030154610f6190610f1285610d6c610b05565b6000858152601960205260409081902060038101929092556002549154600160a060020a03928316926340c10f199291169086905160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b1515610fd657600080fd5b6102c65a03f11515610fe757600080fd5b505050610ff384612423565b1515610ffe57600080fd5b600d54600254600160a060020a03166318160ddd6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561104957600080fd5b6102c65a03f1151561105a57600080fd5b505050604051805190501115151561107157600080fd5b50505050565b60006110a9826110a4611088611548565b61109f670de0b6b3a764000060020260115461270b565b612792565b61271b565b92915050565b60185481565b600c5481565b60125460009060ff166111405761113b6110d3611548565b600854600160a060020a03166357de26a46000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561111b57600080fd5b6102c65a03f1151561112c57600080fd5b50505060405180519050612792565b611144565b6013545b905090565b60125460ff1681565b600754600160a060020a031681565b60115481565b6000818152601960205260408120600301546110a990611189906110a4610b05565b611192846124d9565b61270b565b600080806004356024358082600160a060020a033316600160e060020a031986351634873660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460125460ff16156111fe57600080fd5b611217866110a461120e8a611167565b610d6c8b6124d9565b60008881526019602052604090206002015490955061123c9061119288610d6c612283565b6000888152601960205260409020600201556017546112619061119288610d6c612283565b60175560008781526019602052604090206003015461128f906111926112878989612782565b610d6c610b05565b6000888152601960205260409081902060030191909155600254600160a060020a031690639dc29fac90339089905160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b15156112fe57600080fd5b6102c65a03f1151561130f57600080fd5b5050600954600160a060020a031690506359e02dd76000604051604001526040518163ffffffff1660e060020a0281526004016040805180830381600087803b151561135a57600080fd5b6102c65a03f1151561136b57600080fd5b505050604051805190602001805190509350935082801561138b57508315155b1561141957600654600b54600160a060020a039182169163bb35783b913391166113b589896127ba565b60405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b151561140457600080fd5b6102c65a03f1151561141557600080fd5b5050505b50505050505050565b61143833600035600160e060020a031916612615565b151561144357600080fd5b60008054600160a060020a031916600160a060020a038381169190911791829055167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600554600160a060020a031681565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a4600a54600160a060020a03161561150f57600080fd5b600160a060020a038316151561152457600080fd5b5050600a8054600160a060020a031916600160a060020a0392909216919091179055565b600454600090600160a060020a03166318160ddd82604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561159257600080fd5b6102c65a03f115156115a357600080fd5b50505060405180511590506116255761113b6115bd61182e565b600454600160a060020a03166318160ddd6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561160557600080fd5b6102c65a03f1151561161657600080fd5b5050506040518051905061275e565b506b033b2e3c9fd0803ce800000090565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460125460ff1615806116a55750601254610100900460ff165b15156116b057600080fd5b600554600160a060020a031663a9059cbb336116cb86611077565b60006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561171757600080fd5b6102c65a03f1151561172857600080fd5b50505060405180519050151561173d57600080fd5b600454600160a060020a0316639dc29fac338560405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b15156109b457600080fd5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46117ff33600035600160e060020a031916612615565b151561180a57600080fd5b505060088054600160a060020a031916600160a060020a0392909216919091179055565b600554600090600160a060020a03166370a0823130836040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610ae657600080fd5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46118f533600035600160e060020a031916612615565b151561190057600080fd5b60125460ff1615801561191257508315155b151561191d57600080fd5b6012805460ff191660011790556b033b2e3c9fd0803ce8000000600c55670de0b6b3a76400006011556013849055600554600a54600160a060020a039182169163a9059cbb91168560006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156119b157600080fd5b6102c65a03f115156119c257600080fd5b50505060405180519050151561107157600080fd5b60175481565b600154600160a060020a031681565b600254600160a060020a031681565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a4611a6733600035600160e060020a031916612615565b1515611a7257600080fd5b7f6361700000000000000000000000000000000000000000000000000000000000841415611aa457600d839055611071565b7f6d61740000000000000000000000000000000000000000000000000000000000841415611aef576b033b2e3c9fd0803ce8000000831015611ae557600080fd5b600e839055611071565b7f7461780000000000000000000000000000000000000000000000000000000000841415611b42576b033b2e3c9fd0803ce8000000831015611b3057600080fd5b611b38611c32565b600f839055611071565b7f6665650000000000000000000000000000000000000000000000000000000000841415611b95576b033b2e3c9fd0803ce8000000831015611b8357600080fd5b611b8b611c32565b6010839055611071565b7f6178650000000000000000000000000000000000000000000000000000000000841415611be0576b033b2e3c9fd0803ce8000000831015611bd657600080fd5b600c839055611071565b7f6761700000000000000000000000000000000000000000000000000000000000841415611c2757670de0b6b3a7640000831015611c1d57600080fd5b6011839055611071565b611071565b600f5481565b60008080806004356024358082600160a060020a033316600160e060020a031986351634873660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460125460ff1615611c9a576109c5565b611ca2610a6c565b9550601454860394508460001415611cb9576109c5565b6014869055600f546b033b2e3c9fd0803ce800000094508414611d84576015549250611ce7600f54866127d2565b9350611cf56015548561271b565b6015819055600254600a54600160a060020a03918216926340c10f199290911690611d2c90611d24908861270b565b60175461271b565b60405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b1515611d6f57600080fd5b6102c65a03f11515611d8057600080fd5b5050505b6010546b033b2e3c9fd0803ce800000014611dac57611da9846110a4601054886127d2565b93505b6b033b2e3c9fd0803ce800000084146109c557611dcb6016548561271b565b601655505050505050565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460008481526019602052604090205433600160a060020a03908116911614611e5357600080fd5b600084815260196020526040902060010154611e6f908461270b565b6000858152601960205260409081902060010191909155600454600160a060020a03169063b753a98c90339086905160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b1515611ede57600080fd5b6102c65a03f11515611eef57600080fd5b505050611efb84612423565b1515611f0657600080fd5b6000848152601960205260409020600101541580611f3c57506000848152601960205260409020600101546611c37937e0800090115b151561107157600080fd5b600e5481565b600954600160a060020a031681565b601254610100900460ff1681565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460125460ff1615611fd057600080fd5b600084815260196020526040902060010154611fec9084612782565b6000858152601960205260409081902060010191909155600454600160a060020a03169063f2d5d56b90339086905160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b151561205b57600080fd5b6102c65a03f1151561206c57600080fd5b5050506000848152601960205260409020600101541580611f3c57506000848152601960205260409020600101546611c37937e08000901161107157600080fd5b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460125460ff161561211357600080fd5b60008381526019602052604090205433600160a060020a0390811691161461213a57600080fd5b612143836124d9565b1561215a5761215a83612155856124d9565b611197565b61216383610a70565b1561217a5761217a8361217585610a70565b611dd6565b505060009081526019602052604081208054600160a060020a0319168155600181018290556002810182905560030155565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460008481526019602052604090205433600160a060020a0390811691161461222957600080fd5b600160a060020a038316151561223e57600080fd5b50506000918252601960205260409091208054600160a060020a031916600160a060020a03909216919091179055565b600054600160a060020a031681565b60135481565b600061228d611c32565b5060155490565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a461230033600035600160e060020a031916612615565b151561230b57600080fd5b505060078054600160a060020a031916600160a060020a0392909216919091179055565b600854600160a060020a031681565b600435602435808233600160a060020a031660008035600160e060020a0319169034903660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a46123aa33600035600160e060020a031916612615565b15156123b557600080fd5b505060098054600160a060020a031916600160a060020a0392909216919091179055565b60105481565b600090815260196020526040902054600160a060020a031690565b60006111446017546110a4612283565b60006110a9826110a461241b611548565b601154612792565b60008060008061243d6124346110bb565b6110a487610a70565b6007549093506124b090600160a060020a031663495d32cb6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561248c57600080fd5b6102c65a03f1151561249d57600080fd5b505050604051805190506110a4876124d9565b91506124be82600e5461271b565b90921015949350505050565b600b54600160a060020a031681565b6000818152601960205260408120600201546110a9906110a4612283565b60006004356024358082600160a060020a033316600160e060020a031986351634873660405183815260406020820181815290820183905260608201848480828437820191505094505050505060405180910390a460125460ff161561255c57600080fd5b6125696018546001612782565b6018819055600081815260196020526040908190208054600160a060020a03191633600160a060020a03169081179091559194507f89b8893b806db50897c8e2362c71571cfaeb9761ee40727f683f1793cda9df169085905190815260200160405180910390a2505090565b600a54600160a060020a031681565b6019602052600090815260409020805460018201546002830154600390930154600160a060020a0390921692909184565b600030600160a060020a031683600160a060020a03161415612639575060016110a9565b600154600160a060020a0384811691161415612657575060016110a9565b600054600160a060020a03161515612671575060006110a9565b60008054600160a060020a03169063b7009613908590309086906040516020015260405160e060020a63ffffffff8616028152600160a060020a039384166004820152919092166024820152600160e060020a03199091166044820152606401602060405180830381600087803b15156126ea57600080fd5b6102c65a03f115156126fb57600080fd5b5050506040518051949350505050565b808203828111156110a957600080fd5b60006b033b2e3c9fd0803ce800000061274d612737858561282e565b60026b033b2e3c9fd0803ce80000005b04612782565b81151561275657fe5b049392505050565b60008161274d61277a856b033b2e3c9fd0803ce800000061282e565b600285612747565b808201828110156110a957600080fd5b6000670de0b6b3a764000061274d6127aa858561282e565b6002670de0b6b3a7640000612747565b60008161274d61277a85670de0b6b3a764000061282e565b60006002820615156127f0576b033b2e3c9fd0803ce80000006127f2565b825b90506002820491505b81156110a95761280b838461271b565b9250600282061561282357612820818461271b565b90505b6002820491506127fb565b600081158061284b57505080820282828281151561284857fe5b04145b15156110a957600080fd00a165627a7a72305820667d13151918c17968d4ec5141cf448ed6010399faf1bdf9cd0290b2f028e0d10029"

// DeploySaiTub deploys a new Ethereum contract, binding an instance of SaiTub to it.
func DeploySaiTub(auth *bind.TransactOpts, backend bind.ContractBackend, sai_ common.Address, sin_ common.Address, skr_ common.Address, gem_ common.Address, gov_ common.Address, pip_ common.Address, pep_ common.Address, vox_ common.Address, pit_ common.Address) (common.Address, *types.Transaction, *SaiTub, error) {
	parsed, err := abi.JSON(strings.NewReader(SaiTubABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SaiTubBin), backend, sai_, sin_, skr_, gem_, gov_, pip_, pep_, vox_, pit_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SaiTub{SaiTubCaller: SaiTubCaller{contract: contract}, SaiTubTransactor: SaiTubTransactor{contract: contract}, SaiTubFilterer: SaiTubFilterer{contract: contract}}, nil
}

// SaiTub is an auto generated Go binding around an Ethereum contract.
type SaiTub struct {
	SaiTubCaller     // Read-only binding to the contract
	SaiTubTransactor // Write-only binding to the contract
	SaiTubFilterer   // Log filterer for contract events
}

// SaiTubCaller is an auto generated read-only Go binding around an Ethereum contract.
type SaiTubCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SaiTubTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SaiTubTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SaiTubFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SaiTubFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SaiTubSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SaiTubSession struct {
	Contract     *SaiTub           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SaiTubCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SaiTubCallerSession struct {
	Contract *SaiTubCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// SaiTubTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SaiTubTransactorSession struct {
	Contract     *SaiTubTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SaiTubRaw is an auto generated low-level Go binding around an Ethereum contract.
type SaiTubRaw struct {
	Contract *SaiTub // Generic contract binding to access the raw methods on
}

// SaiTubCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SaiTubCallerRaw struct {
	Contract *SaiTubCaller // Generic read-only contract binding to access the raw methods on
}

// SaiTubTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SaiTubTransactorRaw struct {
	Contract *SaiTubTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSaiTub creates a new instance of SaiTub, bound to a specific deployed contract.
func NewSaiTub(address common.Address, backend bind.ContractBackend) (*SaiTub, error) {
	contract, err := bindSaiTub(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SaiTub{SaiTubCaller: SaiTubCaller{contract: contract}, SaiTubTransactor: SaiTubTransactor{contract: contract}, SaiTubFilterer: SaiTubFilterer{contract: contract}}, nil
}

// NewSaiTubCaller creates a new read-only instance of SaiTub, bound to a specific deployed contract.
func NewSaiTubCaller(address common.Address, caller bind.ContractCaller) (*SaiTubCaller, error) {
	contract, err := bindSaiTub(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SaiTubCaller{contract: contract}, nil
}

// NewSaiTubTransactor creates a new write-only instance of SaiTub, bound to a specific deployed contract.
func NewSaiTubTransactor(address common.Address, transactor bind.ContractTransactor) (*SaiTubTransactor, error) {
	contract, err := bindSaiTub(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SaiTubTransactor{contract: contract}, nil
}

// NewSaiTubFilterer creates a new log filterer instance of SaiTub, bound to a specific deployed contract.
func NewSaiTubFilterer(address common.Address, filterer bind.ContractFilterer) (*SaiTubFilterer, error) {
	contract, err := bindSaiTub(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SaiTubFilterer{contract: contract}, nil
}

// bindSaiTub binds a generic wrapper to an already deployed contract.
func bindSaiTub(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SaiTubABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SaiTub *SaiTubRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _SaiTub.Contract.SaiTubCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SaiTub *SaiTubRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SaiTub.Contract.SaiTubTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SaiTub *SaiTubRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SaiTub.Contract.SaiTubTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SaiTub *SaiTubCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _SaiTub.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SaiTub *SaiTubTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SaiTub.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SaiTub *SaiTubTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SaiTub.Contract.contract.Transact(opts, method, params...)
}

// Air is a free data retrieval call binding the contract method 0x27e7e21e.
//
// Solidity: function air() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Air(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "air")
	return *ret0, err
}

// Air is a free data retrieval call binding the contract method 0x27e7e21e.
//
// Solidity: function air() constant returns(uint256)
func (_SaiTub *SaiTubSession) Air() (*big.Int, error) {
	return _SaiTub.Contract.Air(&_SaiTub.CallOpts)
}

// Air is a free data retrieval call binding the contract method 0x27e7e21e.
//
// Solidity: function air() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Air() (*big.Int, error) {
	return _SaiTub.Contract.Air(&_SaiTub.CallOpts)
}

// Ask is a free data retrieval call binding the contract method 0xe47e7e66.
//
// Solidity: function ask(uint256 wad) constant returns(uint256)
func (_SaiTub *SaiTubCaller) Ask(opts *bind.CallOpts, wad *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "ask", wad)
	return *ret0, err
}

// Ask is a free data retrieval call binding the contract method 0xe47e7e66.
//
// Solidity: function ask(uint256 wad) constant returns(uint256)
func (_SaiTub *SaiTubSession) Ask(wad *big.Int) (*big.Int, error) {
	return _SaiTub.Contract.Ask(&_SaiTub.CallOpts, wad)
}

// Ask is a free data retrieval call binding the contract method 0xe47e7e66.
//
// Solidity: function ask(uint256 wad) constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Ask(wad *big.Int) (*big.Int, error) {
	return _SaiTub.Contract.Ask(&_SaiTub.CallOpts, wad)
}

// Authority is a free data retrieval call binding the contract method 0xbf7e214f.
//
// Solidity: function authority() constant returns(address)
func (_SaiTub *SaiTubCaller) Authority(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "authority")
	return *ret0, err
}

// Authority is a free data retrieval call binding the contract method 0xbf7e214f.
//
// Solidity: function authority() constant returns(address)
func (_SaiTub *SaiTubSession) Authority() (common.Address, error) {
	return _SaiTub.Contract.Authority(&_SaiTub.CallOpts)
}

// Authority is a free data retrieval call binding the contract method 0xbf7e214f.
//
// Solidity: function authority() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Authority() (common.Address, error) {
	return _SaiTub.Contract.Authority(&_SaiTub.CallOpts)
}

// Axe is a free data retrieval call binding the contract method 0x509bf2bf.
//
// Solidity: function axe() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Axe(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "axe")
	return *ret0, err
}

// Axe is a free data retrieval call binding the contract method 0x509bf2bf.
//
// Solidity: function axe() constant returns(uint256)
func (_SaiTub *SaiTubSession) Axe() (*big.Int, error) {
	return _SaiTub.Contract.Axe(&_SaiTub.CallOpts)
}

// Axe is a free data retrieval call binding the contract method 0x509bf2bf.
//
// Solidity: function axe() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Axe() (*big.Int, error) {
	return _SaiTub.Contract.Axe(&_SaiTub.CallOpts)
}

// Bid is a free data retrieval call binding the contract method 0x454a2ab3.
//
// Solidity: function bid(uint256 wad) constant returns(uint256)
func (_SaiTub *SaiTubCaller) Bid(opts *bind.CallOpts, wad *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "bid", wad)
	return *ret0, err
}

// Bid is a free data retrieval call binding the contract method 0x454a2ab3.
//
// Solidity: function bid(uint256 wad) constant returns(uint256)
func (_SaiTub *SaiTubSession) Bid(wad *big.Int) (*big.Int, error) {
	return _SaiTub.Contract.Bid(&_SaiTub.CallOpts, wad)
}

// Bid is a free data retrieval call binding the contract method 0x454a2ab3.
//
// Solidity: function bid(uint256 wad) constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Bid(wad *big.Int) (*big.Int, error) {
	return _SaiTub.Contract.Bid(&_SaiTub.CallOpts, wad)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Cap(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "cap")
	return *ret0, err
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() constant returns(uint256)
func (_SaiTub *SaiTubSession) Cap() (*big.Int, error) {
	return _SaiTub.Contract.Cap(&_SaiTub.CallOpts)
}

// Cap is a free data retrieval call binding the contract method 0x355274ea.
//
// Solidity: function cap() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Cap() (*big.Int, error) {
	return _SaiTub.Contract.Cap(&_SaiTub.CallOpts)
}

// Cupi is a free data retrieval call binding the contract method 0x49955431.
//
// Solidity: function cupi() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Cupi(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "cupi")
	return *ret0, err
}

// Cupi is a free data retrieval call binding the contract method 0x49955431.
//
// Solidity: function cupi() constant returns(uint256)
func (_SaiTub *SaiTubSession) Cupi() (*big.Int, error) {
	return _SaiTub.Contract.Cupi(&_SaiTub.CallOpts)
}

// Cupi is a free data retrieval call binding the contract method 0x49955431.
//
// Solidity: function cupi() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Cupi() (*big.Int, error) {
	return _SaiTub.Contract.Cupi(&_SaiTub.CallOpts)
}

// Cups is a free data retrieval call binding the contract method 0xfdac0025.
//
// Solidity: function cups(bytes32 ) constant returns(address lad, uint256 ink, uint256 art, uint256 ire)
func (_SaiTub *SaiTubCaller) Cups(opts *bind.CallOpts, arg0 [32]byte) (struct {
	Lad common.Address
	Ink *big.Int
	Art *big.Int
	Ire *big.Int
}, error) {
	ret := new(struct {
		Lad common.Address
		Ink *big.Int
		Art *big.Int
		Ire *big.Int
	})
	out := ret
	err := _SaiTub.contract.Call(opts, out, "cups", arg0)
	return *ret, err
}

// Cups is a free data retrieval call binding the contract method 0xfdac0025.
//
// Solidity: function cups(bytes32 ) constant returns(address lad, uint256 ink, uint256 art, uint256 ire)
func (_SaiTub *SaiTubSession) Cups(arg0 [32]byte) (struct {
	Lad common.Address
	Ink *big.Int
	Art *big.Int
	Ire *big.Int
}, error) {
	return _SaiTub.Contract.Cups(&_SaiTub.CallOpts, arg0)
}

// Cups is a free data retrieval call binding the contract method 0xfdac0025.
//
// Solidity: function cups(bytes32 ) constant returns(address lad, uint256 ink, uint256 art, uint256 ire)
func (_SaiTub *SaiTubCallerSession) Cups(arg0 [32]byte) (struct {
	Lad common.Address
	Ink *big.Int
	Art *big.Int
	Ire *big.Int
}, error) {
	return _SaiTub.Contract.Cups(&_SaiTub.CallOpts, arg0)
}

// Era is a free data retrieval call binding the contract method 0x143e55e0.
//
// Solidity: function era() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Era(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "era")
	return *ret0, err
}

// Era is a free data retrieval call binding the contract method 0x143e55e0.
//
// Solidity: function era() constant returns(uint256)
func (_SaiTub *SaiTubSession) Era() (*big.Int, error) {
	return _SaiTub.Contract.Era(&_SaiTub.CallOpts)
}

// Era is a free data retrieval call binding the contract method 0x143e55e0.
//
// Solidity: function era() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Era() (*big.Int, error) {
	return _SaiTub.Contract.Era(&_SaiTub.CallOpts)
}

// Fee is a free data retrieval call binding the contract method 0xddca3f43.
//
// Solidity: function fee() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Fee(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "fee")
	return *ret0, err
}

// Fee is a free data retrieval call binding the contract method 0xddca3f43.
//
// Solidity: function fee() constant returns(uint256)
func (_SaiTub *SaiTubSession) Fee() (*big.Int, error) {
	return _SaiTub.Contract.Fee(&_SaiTub.CallOpts)
}

// Fee is a free data retrieval call binding the contract method 0xddca3f43.
//
// Solidity: function fee() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Fee() (*big.Int, error) {
	return _SaiTub.Contract.Fee(&_SaiTub.CallOpts)
}

// Fit is a free data retrieval call binding the contract method 0xc8e13bb4.
//
// Solidity: function fit() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Fit(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "fit")
	return *ret0, err
}

// Fit is a free data retrieval call binding the contract method 0xc8e13bb4.
//
// Solidity: function fit() constant returns(uint256)
func (_SaiTub *SaiTubSession) Fit() (*big.Int, error) {
	return _SaiTub.Contract.Fit(&_SaiTub.CallOpts)
}

// Fit is a free data retrieval call binding the contract method 0xc8e13bb4.
//
// Solidity: function fit() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Fit() (*big.Int, error) {
	return _SaiTub.Contract.Fit(&_SaiTub.CallOpts)
}

// Gap is a free data retrieval call binding the contract method 0x6c32c0a6.
//
// Solidity: function gap() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Gap(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "gap")
	return *ret0, err
}

// Gap is a free data retrieval call binding the contract method 0x6c32c0a6.
//
// Solidity: function gap() constant returns(uint256)
func (_SaiTub *SaiTubSession) Gap() (*big.Int, error) {
	return _SaiTub.Contract.Gap(&_SaiTub.CallOpts)
}

// Gap is a free data retrieval call binding the contract method 0x6c32c0a6.
//
// Solidity: function gap() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Gap() (*big.Int, error) {
	return _SaiTub.Contract.Gap(&_SaiTub.CallOpts)
}

// Gem is a free data retrieval call binding the contract method 0x7bd2bea7.
//
// Solidity: function gem() constant returns(address)
func (_SaiTub *SaiTubCaller) Gem(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "gem")
	return *ret0, err
}

// Gem is a free data retrieval call binding the contract method 0x7bd2bea7.
//
// Solidity: function gem() constant returns(address)
func (_SaiTub *SaiTubSession) Gem() (common.Address, error) {
	return _SaiTub.Contract.Gem(&_SaiTub.CallOpts)
}

// Gem is a free data retrieval call binding the contract method 0x7bd2bea7.
//
// Solidity: function gem() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Gem() (common.Address, error) {
	return _SaiTub.Contract.Gem(&_SaiTub.CallOpts)
}

// Gov is a free data retrieval call binding the contract method 0x12d43a51.
//
// Solidity: function gov() constant returns(address)
func (_SaiTub *SaiTubCaller) Gov(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "gov")
	return *ret0, err
}

// Gov is a free data retrieval call binding the contract method 0x12d43a51.
//
// Solidity: function gov() constant returns(address)
func (_SaiTub *SaiTubSession) Gov() (common.Address, error) {
	return _SaiTub.Contract.Gov(&_SaiTub.CallOpts)
}

// Gov is a free data retrieval call binding the contract method 0x12d43a51.
//
// Solidity: function gov() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Gov() (common.Address, error) {
	return _SaiTub.Contract.Gov(&_SaiTub.CallOpts)
}

// Ink is a free data retrieval call binding the contract method 0x1f3634ed.
//
// Solidity: function ink(bytes32 cup) constant returns(uint256)
func (_SaiTub *SaiTubCaller) Ink(opts *bind.CallOpts, cup [32]byte) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "ink", cup)
	return *ret0, err
}

// Ink is a free data retrieval call binding the contract method 0x1f3634ed.
//
// Solidity: function ink(bytes32 cup) constant returns(uint256)
func (_SaiTub *SaiTubSession) Ink(cup [32]byte) (*big.Int, error) {
	return _SaiTub.Contract.Ink(&_SaiTub.CallOpts, cup)
}

// Ink is a free data retrieval call binding the contract method 0x1f3634ed.
//
// Solidity: function ink(bytes32 cup) constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Ink(cup [32]byte) (*big.Int, error) {
	return _SaiTub.Contract.Ink(&_SaiTub.CallOpts, cup)
}

// Lad is a free data retrieval call binding the contract method 0xde5f5517.
//
// Solidity: function lad(bytes32 cup) constant returns(address)
func (_SaiTub *SaiTubCaller) Lad(opts *bind.CallOpts, cup [32]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "lad", cup)
	return *ret0, err
}

// Lad is a free data retrieval call binding the contract method 0xde5f5517.
//
// Solidity: function lad(bytes32 cup) constant returns(address)
func (_SaiTub *SaiTubSession) Lad(cup [32]byte) (common.Address, error) {
	return _SaiTub.Contract.Lad(&_SaiTub.CallOpts, cup)
}

// Lad is a free data retrieval call binding the contract method 0xde5f5517.
//
// Solidity: function lad(bytes32 cup) constant returns(address)
func (_SaiTub *SaiTubCallerSession) Lad(cup [32]byte) (common.Address, error) {
	return _SaiTub.Contract.Lad(&_SaiTub.CallOpts, cup)
}

// Mat is a free data retrieval call binding the contract method 0xab0783da.
//
// Solidity: function mat() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Mat(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "mat")
	return *ret0, err
}

// Mat is a free data retrieval call binding the contract method 0xab0783da.
//
// Solidity: function mat() constant returns(uint256)
func (_SaiTub *SaiTubSession) Mat() (*big.Int, error) {
	return _SaiTub.Contract.Mat(&_SaiTub.CallOpts)
}

// Mat is a free data retrieval call binding the contract method 0xab0783da.
//
// Solidity: function mat() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Mat() (*big.Int, error) {
	return _SaiTub.Contract.Mat(&_SaiTub.CallOpts)
}

// Off is a free data retrieval call binding the contract method 0x6626b26d.
//
// Solidity: function off() constant returns(bool)
func (_SaiTub *SaiTubCaller) Off(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "off")
	return *ret0, err
}

// Off is a free data retrieval call binding the contract method 0x6626b26d.
//
// Solidity: function off() constant returns(bool)
func (_SaiTub *SaiTubSession) Off() (bool, error) {
	return _SaiTub.Contract.Off(&_SaiTub.CallOpts)
}

// Off is a free data retrieval call binding the contract method 0x6626b26d.
//
// Solidity: function off() constant returns(bool)
func (_SaiTub *SaiTubCallerSession) Off() (bool, error) {
	return _SaiTub.Contract.Off(&_SaiTub.CallOpts)
}

// Out is a free data retrieval call binding the contract method 0xb2a1449b.
//
// Solidity: function out() constant returns(bool)
func (_SaiTub *SaiTubCaller) Out(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "out")
	return *ret0, err
}

// Out is a free data retrieval call binding the contract method 0xb2a1449b.
//
// Solidity: function out() constant returns(bool)
func (_SaiTub *SaiTubSession) Out() (bool, error) {
	return _SaiTub.Contract.Out(&_SaiTub.CallOpts)
}

// Out is a free data retrieval call binding the contract method 0xb2a1449b.
//
// Solidity: function out() constant returns(bool)
func (_SaiTub *SaiTubCallerSession) Out() (bool, error) {
	return _SaiTub.Contract.Out(&_SaiTub.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_SaiTub *SaiTubCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_SaiTub *SaiTubSession) Owner() (common.Address, error) {
	return _SaiTub.Contract.Owner(&_SaiTub.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Owner() (common.Address, error) {
	return _SaiTub.Contract.Owner(&_SaiTub.CallOpts)
}

// Pep is a free data retrieval call binding the contract method 0xace237f5.
//
// Solidity: function pep() constant returns(address)
func (_SaiTub *SaiTubCaller) Pep(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "pep")
	return *ret0, err
}

// Pep is a free data retrieval call binding the contract method 0xace237f5.
//
// Solidity: function pep() constant returns(address)
func (_SaiTub *SaiTubSession) Pep() (common.Address, error) {
	return _SaiTub.Contract.Pep(&_SaiTub.CallOpts)
}

// Pep is a free data retrieval call binding the contract method 0xace237f5.
//
// Solidity: function pep() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Pep() (common.Address, error) {
	return _SaiTub.Contract.Pep(&_SaiTub.CallOpts)
}

// Per is a free data retrieval call binding the contract method 0x7ec9c3b8.
//
// Solidity: function per() constant returns(uint256 ray)
func (_SaiTub *SaiTubCaller) Per(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "per")
	return *ret0, err
}

// Per is a free data retrieval call binding the contract method 0x7ec9c3b8.
//
// Solidity: function per() constant returns(uint256 ray)
func (_SaiTub *SaiTubSession) Per() (*big.Int, error) {
	return _SaiTub.Contract.Per(&_SaiTub.CallOpts)
}

// Per is a free data retrieval call binding the contract method 0x7ec9c3b8.
//
// Solidity: function per() constant returns(uint256 ray)
func (_SaiTub *SaiTubCallerSession) Per() (*big.Int, error) {
	return _SaiTub.Contract.Per(&_SaiTub.CallOpts)
}

// Pie is a free data retrieval call binding the contract method 0x8a95a746.
//
// Solidity: function pie() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Pie(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "pie")
	return *ret0, err
}

// Pie is a free data retrieval call binding the contract method 0x8a95a746.
//
// Solidity: function pie() constant returns(uint256)
func (_SaiTub *SaiTubSession) Pie() (*big.Int, error) {
	return _SaiTub.Contract.Pie(&_SaiTub.CallOpts)
}

// Pie is a free data retrieval call binding the contract method 0x8a95a746.
//
// Solidity: function pie() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Pie() (*big.Int, error) {
	return _SaiTub.Contract.Pie(&_SaiTub.CallOpts)
}

// Pip is a free data retrieval call binding the contract method 0xd741e2f9.
//
// Solidity: function pip() constant returns(address)
func (_SaiTub *SaiTubCaller) Pip(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "pip")
	return *ret0, err
}

// Pip is a free data retrieval call binding the contract method 0xd741e2f9.
//
// Solidity: function pip() constant returns(address)
func (_SaiTub *SaiTubSession) Pip() (common.Address, error) {
	return _SaiTub.Contract.Pip(&_SaiTub.CallOpts)
}

// Pip is a free data retrieval call binding the contract method 0xd741e2f9.
//
// Solidity: function pip() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Pip() (common.Address, error) {
	return _SaiTub.Contract.Pip(&_SaiTub.CallOpts)
}

// Pit is a free data retrieval call binding the contract method 0xf03c7c6e.
//
// Solidity: function pit() constant returns(address)
func (_SaiTub *SaiTubCaller) Pit(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "pit")
	return *ret0, err
}

// Pit is a free data retrieval call binding the contract method 0xf03c7c6e.
//
// Solidity: function pit() constant returns(address)
func (_SaiTub *SaiTubSession) Pit() (common.Address, error) {
	return _SaiTub.Contract.Pit(&_SaiTub.CallOpts)
}

// Pit is a free data retrieval call binding the contract method 0xf03c7c6e.
//
// Solidity: function pit() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Pit() (common.Address, error) {
	return _SaiTub.Contract.Pit(&_SaiTub.CallOpts)
}

// Rho is a free data retrieval call binding the contract method 0x20aba08b.
//
// Solidity: function rho() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Rho(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "rho")
	return *ret0, err
}

// Rho is a free data retrieval call binding the contract method 0x20aba08b.
//
// Solidity: function rho() constant returns(uint256)
func (_SaiTub *SaiTubSession) Rho() (*big.Int, error) {
	return _SaiTub.Contract.Rho(&_SaiTub.CallOpts)
}

// Rho is a free data retrieval call binding the contract method 0x20aba08b.
//
// Solidity: function rho() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Rho() (*big.Int, error) {
	return _SaiTub.Contract.Rho(&_SaiTub.CallOpts)
}

// Rum is a free data retrieval call binding the contract method 0x8cf0c191.
//
// Solidity: function rum() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Rum(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "rum")
	return *ret0, err
}

// Rum is a free data retrieval call binding the contract method 0x8cf0c191.
//
// Solidity: function rum() constant returns(uint256)
func (_SaiTub *SaiTubSession) Rum() (*big.Int, error) {
	return _SaiTub.Contract.Rum(&_SaiTub.CallOpts)
}

// Rum is a free data retrieval call binding the contract method 0x8cf0c191.
//
// Solidity: function rum() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Rum() (*big.Int, error) {
	return _SaiTub.Contract.Rum(&_SaiTub.CallOpts)
}

// Sai is a free data retrieval call binding the contract method 0x9166cba4.
//
// Solidity: function sai() constant returns(address)
func (_SaiTub *SaiTubCaller) Sai(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "sai")
	return *ret0, err
}

// Sai is a free data retrieval call binding the contract method 0x9166cba4.
//
// Solidity: function sai() constant returns(address)
func (_SaiTub *SaiTubSession) Sai() (common.Address, error) {
	return _SaiTub.Contract.Sai(&_SaiTub.CallOpts)
}

// Sai is a free data retrieval call binding the contract method 0x9166cba4.
//
// Solidity: function sai() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Sai() (common.Address, error) {
	return _SaiTub.Contract.Sai(&_SaiTub.CallOpts)
}

// Sin is a free data retrieval call binding the contract method 0x071bafb5.
//
// Solidity: function sin() constant returns(address)
func (_SaiTub *SaiTubCaller) Sin(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "sin")
	return *ret0, err
}

// Sin is a free data retrieval call binding the contract method 0x071bafb5.
//
// Solidity: function sin() constant returns(address)
func (_SaiTub *SaiTubSession) Sin() (common.Address, error) {
	return _SaiTub.Contract.Sin(&_SaiTub.CallOpts)
}

// Sin is a free data retrieval call binding the contract method 0x071bafb5.
//
// Solidity: function sin() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Sin() (common.Address, error) {
	return _SaiTub.Contract.Sin(&_SaiTub.CallOpts)
}

// Skr is a free data retrieval call binding the contract method 0x0f8a771e.
//
// Solidity: function skr() constant returns(address)
func (_SaiTub *SaiTubCaller) Skr(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "skr")
	return *ret0, err
}

// Skr is a free data retrieval call binding the contract method 0x0f8a771e.
//
// Solidity: function skr() constant returns(address)
func (_SaiTub *SaiTubSession) Skr() (common.Address, error) {
	return _SaiTub.Contract.Skr(&_SaiTub.CallOpts)
}

// Skr is a free data retrieval call binding the contract method 0x0f8a771e.
//
// Solidity: function skr() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Skr() (common.Address, error) {
	return _SaiTub.Contract.Skr(&_SaiTub.CallOpts)
}

// Tag is a free data retrieval call binding the contract method 0x51f91066.
//
// Solidity: function tag() constant returns(uint256 wad)
func (_SaiTub *SaiTubCaller) Tag(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "tag")
	return *ret0, err
}

// Tag is a free data retrieval call binding the contract method 0x51f91066.
//
// Solidity: function tag() constant returns(uint256 wad)
func (_SaiTub *SaiTubSession) Tag() (*big.Int, error) {
	return _SaiTub.Contract.Tag(&_SaiTub.CallOpts)
}

// Tag is a free data retrieval call binding the contract method 0x51f91066.
//
// Solidity: function tag() constant returns(uint256 wad)
func (_SaiTub *SaiTubCallerSession) Tag() (*big.Int, error) {
	return _SaiTub.Contract.Tag(&_SaiTub.CallOpts)
}

// Tap is a free data retrieval call binding the contract method 0xfd221031.
//
// Solidity: function tap() constant returns(address)
func (_SaiTub *SaiTubCaller) Tap(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "tap")
	return *ret0, err
}

// Tap is a free data retrieval call binding the contract method 0xfd221031.
//
// Solidity: function tap() constant returns(address)
func (_SaiTub *SaiTubSession) Tap() (common.Address, error) {
	return _SaiTub.Contract.Tap(&_SaiTub.CallOpts)
}

// Tap is a free data retrieval call binding the contract method 0xfd221031.
//
// Solidity: function tap() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Tap() (common.Address, error) {
	return _SaiTub.Contract.Tap(&_SaiTub.CallOpts)
}

// Tax is a free data retrieval call binding the contract method 0x99c8d556.
//
// Solidity: function tax() constant returns(uint256)
func (_SaiTub *SaiTubCaller) Tax(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "tax")
	return *ret0, err
}

// Tax is a free data retrieval call binding the contract method 0x99c8d556.
//
// Solidity: function tax() constant returns(uint256)
func (_SaiTub *SaiTubSession) Tax() (*big.Int, error) {
	return _SaiTub.Contract.Tax(&_SaiTub.CallOpts)
}

// Tax is a free data retrieval call binding the contract method 0x99c8d556.
//
// Solidity: function tax() constant returns(uint256)
func (_SaiTub *SaiTubCallerSession) Tax() (*big.Int, error) {
	return _SaiTub.Contract.Tax(&_SaiTub.CallOpts)
}

// Vox is a free data retrieval call binding the contract method 0x67550a35.
//
// Solidity: function vox() constant returns(address)
func (_SaiTub *SaiTubCaller) Vox(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _SaiTub.contract.Call(opts, out, "vox")
	return *ret0, err
}

// Vox is a free data retrieval call binding the contract method 0x67550a35.
//
// Solidity: function vox() constant returns(address)
func (_SaiTub *SaiTubSession) Vox() (common.Address, error) {
	return _SaiTub.Contract.Vox(&_SaiTub.CallOpts)
}

// Vox is a free data retrieval call binding the contract method 0x67550a35.
//
// Solidity: function vox() constant returns(address)
func (_SaiTub *SaiTubCallerSession) Vox() (common.Address, error) {
	return _SaiTub.Contract.Vox(&_SaiTub.CallOpts)
}

// Bite is a paid mutator transaction binding the contract method 0x40cc8854.
//
// Solidity: function bite(bytes32 cup) returns()
func (_SaiTub *SaiTubTransactor) Bite(opts *bind.TransactOpts, cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "bite", cup)
}

// Bite is a paid mutator transaction binding the contract method 0x40cc8854.
//
// Solidity: function bite(bytes32 cup) returns()
func (_SaiTub *SaiTubSession) Bite(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Bite(&_SaiTub.TransactOpts, cup)
}

// Bite is a paid mutator transaction binding the contract method 0x40cc8854.
//
// Solidity: function bite(bytes32 cup) returns()
func (_SaiTub *SaiTubTransactorSession) Bite(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Bite(&_SaiTub.TransactOpts, cup)
}

// Cage is a paid mutator transaction binding the contract method 0x8ceedb47.
//
// Solidity: function cage(uint256 fit_, uint256 jam) returns()
func (_SaiTub *SaiTubTransactor) Cage(opts *bind.TransactOpts, fit_ *big.Int, jam *big.Int) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "cage", fit_, jam)
}

// Cage is a paid mutator transaction binding the contract method 0x8ceedb47.
//
// Solidity: function cage(uint256 fit_, uint256 jam) returns()
func (_SaiTub *SaiTubSession) Cage(fit_ *big.Int, jam *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Cage(&_SaiTub.TransactOpts, fit_, jam)
}

// Cage is a paid mutator transaction binding the contract method 0x8ceedb47.
//
// Solidity: function cage(uint256 fit_, uint256 jam) returns()
func (_SaiTub *SaiTubTransactorSession) Cage(fit_ *big.Int, jam *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Cage(&_SaiTub.TransactOpts, fit_, jam)
}

// Chi is a paid mutator transaction binding the contract method 0xc92aecc4.
//
// Solidity: function chi() returns(uint256)
func (_SaiTub *SaiTubTransactor) Chi(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "chi")
}

// Chi is a paid mutator transaction binding the contract method 0xc92aecc4.
//
// Solidity: function chi() returns(uint256)
func (_SaiTub *SaiTubSession) Chi() (*types.Transaction, error) {
	return _SaiTub.Contract.Chi(&_SaiTub.TransactOpts)
}

// Chi is a paid mutator transaction binding the contract method 0xc92aecc4.
//
// Solidity: function chi() returns(uint256)
func (_SaiTub *SaiTubTransactorSession) Chi() (*types.Transaction, error) {
	return _SaiTub.Contract.Chi(&_SaiTub.TransactOpts)
}

// Din is a paid mutator transaction binding the contract method 0xe0ae96e9.
//
// Solidity: function din() returns(uint256)
func (_SaiTub *SaiTubTransactor) Din(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "din")
}

// Din is a paid mutator transaction binding the contract method 0xe0ae96e9.
//
// Solidity: function din() returns(uint256)
func (_SaiTub *SaiTubSession) Din() (*types.Transaction, error) {
	return _SaiTub.Contract.Din(&_SaiTub.TransactOpts)
}

// Din is a paid mutator transaction binding the contract method 0xe0ae96e9.
//
// Solidity: function din() returns(uint256)
func (_SaiTub *SaiTubTransactorSession) Din() (*types.Transaction, error) {
	return _SaiTub.Contract.Din(&_SaiTub.TransactOpts)
}

// Draw is a paid mutator transaction binding the contract method 0x440f19ba.
//
// Solidity: function draw(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubTransactor) Draw(opts *bind.TransactOpts, cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "draw", cup, wad)
}

// Draw is a paid mutator transaction binding the contract method 0x440f19ba.
//
// Solidity: function draw(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubSession) Draw(cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Draw(&_SaiTub.TransactOpts, cup, wad)
}

// Draw is a paid mutator transaction binding the contract method 0x440f19ba.
//
// Solidity: function draw(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubTransactorSession) Draw(cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Draw(&_SaiTub.TransactOpts, cup, wad)
}

// Drip is a paid mutator transaction binding the contract method 0x9f678cca.
//
// Solidity: function drip() returns()
func (_SaiTub *SaiTubTransactor) Drip(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "drip")
}

// Drip is a paid mutator transaction binding the contract method 0x9f678cca.
//
// Solidity: function drip() returns()
func (_SaiTub *SaiTubSession) Drip() (*types.Transaction, error) {
	return _SaiTub.Contract.Drip(&_SaiTub.TransactOpts)
}

// Drip is a paid mutator transaction binding the contract method 0x9f678cca.
//
// Solidity: function drip() returns()
func (_SaiTub *SaiTubTransactorSession) Drip() (*types.Transaction, error) {
	return _SaiTub.Contract.Drip(&_SaiTub.TransactOpts)
}

// Exit is a paid mutator transaction binding the contract method 0x7f8661a1.
//
// Solidity: function exit(uint256 wad) returns()
func (_SaiTub *SaiTubTransactor) Exit(opts *bind.TransactOpts, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "exit", wad)
}

// Exit is a paid mutator transaction binding the contract method 0x7f8661a1.
//
// Solidity: function exit(uint256 wad) returns()
func (_SaiTub *SaiTubSession) Exit(wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Exit(&_SaiTub.TransactOpts, wad)
}

// Exit is a paid mutator transaction binding the contract method 0x7f8661a1.
//
// Solidity: function exit(uint256 wad) returns()
func (_SaiTub *SaiTubTransactorSession) Exit(wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Exit(&_SaiTub.TransactOpts, wad)
}

// Flow is a paid mutator transaction binding the contract method 0x343aad82.
//
// Solidity: function flow() returns()
func (_SaiTub *SaiTubTransactor) Flow(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "flow")
}

// Flow is a paid mutator transaction binding the contract method 0x343aad82.
//
// Solidity: function flow() returns()
func (_SaiTub *SaiTubSession) Flow() (*types.Transaction, error) {
	return _SaiTub.Contract.Flow(&_SaiTub.TransactOpts)
}

// Flow is a paid mutator transaction binding the contract method 0x343aad82.
//
// Solidity: function flow() returns()
func (_SaiTub *SaiTubTransactorSession) Flow() (*types.Transaction, error) {
	return _SaiTub.Contract.Flow(&_SaiTub.TransactOpts)
}

// Free is a paid mutator transaction binding the contract method 0xa5cd184e.
//
// Solidity: function free(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubTransactor) Free(opts *bind.TransactOpts, cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "free", cup, wad)
}

// Free is a paid mutator transaction binding the contract method 0xa5cd184e.
//
// Solidity: function free(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubSession) Free(cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Free(&_SaiTub.TransactOpts, cup, wad)
}

// Free is a paid mutator transaction binding the contract method 0xa5cd184e.
//
// Solidity: function free(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubTransactorSession) Free(cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Free(&_SaiTub.TransactOpts, cup, wad)
}

// Give is a paid mutator transaction binding the contract method 0xbaa8529c.
//
// Solidity: function give(bytes32 cup, address guy) returns()
func (_SaiTub *SaiTubTransactor) Give(opts *bind.TransactOpts, cup [32]byte, guy common.Address) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "give", cup, guy)
}

// Give is a paid mutator transaction binding the contract method 0xbaa8529c.
//
// Solidity: function give(bytes32 cup, address guy) returns()
func (_SaiTub *SaiTubSession) Give(cup [32]byte, guy common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.Give(&_SaiTub.TransactOpts, cup, guy)
}

// Give is a paid mutator transaction binding the contract method 0xbaa8529c.
//
// Solidity: function give(bytes32 cup, address guy) returns()
func (_SaiTub *SaiTubTransactorSession) Give(cup [32]byte, guy common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.Give(&_SaiTub.TransactOpts, cup, guy)
}

// Join is a paid mutator transaction binding the contract method 0x049878f3.
//
// Solidity: function join(uint256 wad) returns()
func (_SaiTub *SaiTubTransactor) Join(opts *bind.TransactOpts, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "join", wad)
}

// Join is a paid mutator transaction binding the contract method 0x049878f3.
//
// Solidity: function join(uint256 wad) returns()
func (_SaiTub *SaiTubSession) Join(wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Join(&_SaiTub.TransactOpts, wad)
}

// Join is a paid mutator transaction binding the contract method 0x049878f3.
//
// Solidity: function join(uint256 wad) returns()
func (_SaiTub *SaiTubTransactorSession) Join(wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Join(&_SaiTub.TransactOpts, wad)
}

// Lock is a paid mutator transaction binding the contract method 0xb3b77a51.
//
// Solidity: function lock(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubTransactor) Lock(opts *bind.TransactOpts, cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "lock", cup, wad)
}

// Lock is a paid mutator transaction binding the contract method 0xb3b77a51.
//
// Solidity: function lock(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubSession) Lock(cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Lock(&_SaiTub.TransactOpts, cup, wad)
}

// Lock is a paid mutator transaction binding the contract method 0xb3b77a51.
//
// Solidity: function lock(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubTransactorSession) Lock(cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Lock(&_SaiTub.TransactOpts, cup, wad)
}

// Mold is a paid mutator transaction binding the contract method 0x92b0d721.
//
// Solidity: function mold(bytes32 param, uint256 val) returns()
func (_SaiTub *SaiTubTransactor) Mold(opts *bind.TransactOpts, param [32]byte, val *big.Int) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "mold", param, val)
}

// Mold is a paid mutator transaction binding the contract method 0x92b0d721.
//
// Solidity: function mold(bytes32 param, uint256 val) returns()
func (_SaiTub *SaiTubSession) Mold(param [32]byte, val *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Mold(&_SaiTub.TransactOpts, param, val)
}

// Mold is a paid mutator transaction binding the contract method 0x92b0d721.
//
// Solidity: function mold(bytes32 param, uint256 val) returns()
func (_SaiTub *SaiTubTransactorSession) Mold(param [32]byte, val *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Mold(&_SaiTub.TransactOpts, param, val)
}

// Open is a paid mutator transaction binding the contract method 0xfcfff16f.
//
// Solidity: function open() returns(bytes32 cup)
func (_SaiTub *SaiTubTransactor) Open(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "open")
}

// Open is a paid mutator transaction binding the contract method 0xfcfff16f.
//
// Solidity: function open() returns(bytes32 cup)
func (_SaiTub *SaiTubSession) Open() (*types.Transaction, error) {
	return _SaiTub.Contract.Open(&_SaiTub.TransactOpts)
}

// Open is a paid mutator transaction binding the contract method 0xfcfff16f.
//
// Solidity: function open() returns(bytes32 cup)
func (_SaiTub *SaiTubTransactorSession) Open() (*types.Transaction, error) {
	return _SaiTub.Contract.Open(&_SaiTub.TransactOpts)
}

// Rap is a paid mutator transaction binding the contract method 0x6f78ee0d.
//
// Solidity: function rap(bytes32 cup) returns(uint256)
func (_SaiTub *SaiTubTransactor) Rap(opts *bind.TransactOpts, cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "rap", cup)
}

// Rap is a paid mutator transaction binding the contract method 0x6f78ee0d.
//
// Solidity: function rap(bytes32 cup) returns(uint256)
func (_SaiTub *SaiTubSession) Rap(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Rap(&_SaiTub.TransactOpts, cup)
}

// Rap is a paid mutator transaction binding the contract method 0x6f78ee0d.
//
// Solidity: function rap(bytes32 cup) returns(uint256)
func (_SaiTub *SaiTubTransactorSession) Rap(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Rap(&_SaiTub.TransactOpts, cup)
}

// Rhi is a paid mutator transaction binding the contract method 0x338a0261.
//
// Solidity: function rhi() returns(uint256)
func (_SaiTub *SaiTubTransactor) Rhi(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "rhi")
}

// Rhi is a paid mutator transaction binding the contract method 0x338a0261.
//
// Solidity: function rhi() returns(uint256)
func (_SaiTub *SaiTubSession) Rhi() (*types.Transaction, error) {
	return _SaiTub.Contract.Rhi(&_SaiTub.TransactOpts)
}

// Rhi is a paid mutator transaction binding the contract method 0x338a0261.
//
// Solidity: function rhi() returns(uint256)
func (_SaiTub *SaiTubTransactorSession) Rhi() (*types.Transaction, error) {
	return _SaiTub.Contract.Rhi(&_SaiTub.TransactOpts)
}

// Safe is a paid mutator transaction binding the contract method 0xe95823ad.
//
// Solidity: function safe(bytes32 cup) returns(bool)
func (_SaiTub *SaiTubTransactor) Safe(opts *bind.TransactOpts, cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "safe", cup)
}

// Safe is a paid mutator transaction binding the contract method 0xe95823ad.
//
// Solidity: function safe(bytes32 cup) returns(bool)
func (_SaiTub *SaiTubSession) Safe(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Safe(&_SaiTub.TransactOpts, cup)
}

// Safe is a paid mutator transaction binding the contract method 0xe95823ad.
//
// Solidity: function safe(bytes32 cup) returns(bool)
func (_SaiTub *SaiTubTransactorSession) Safe(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Safe(&_SaiTub.TransactOpts, cup)
}

// SetAuthority is a paid mutator transaction binding the contract method 0x7a9e5e4b.
//
// Solidity: function setAuthority(address authority_) returns()
func (_SaiTub *SaiTubTransactor) SetAuthority(opts *bind.TransactOpts, authority_ common.Address) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "setAuthority", authority_)
}

// SetAuthority is a paid mutator transaction binding the contract method 0x7a9e5e4b.
//
// Solidity: function setAuthority(address authority_) returns()
func (_SaiTub *SaiTubSession) SetAuthority(authority_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetAuthority(&_SaiTub.TransactOpts, authority_)
}

// SetAuthority is a paid mutator transaction binding the contract method 0x7a9e5e4b.
//
// Solidity: function setAuthority(address authority_) returns()
func (_SaiTub *SaiTubTransactorSession) SetAuthority(authority_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetAuthority(&_SaiTub.TransactOpts, authority_)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(address owner_) returns()
func (_SaiTub *SaiTubTransactor) SetOwner(opts *bind.TransactOpts, owner_ common.Address) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "setOwner", owner_)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(address owner_) returns()
func (_SaiTub *SaiTubSession) SetOwner(owner_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetOwner(&_SaiTub.TransactOpts, owner_)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(address owner_) returns()
func (_SaiTub *SaiTubTransactorSession) SetOwner(owner_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetOwner(&_SaiTub.TransactOpts, owner_)
}

// SetPep is a paid mutator transaction binding the contract method 0xd9c27cc6.
//
// Solidity: function setPep(address pep_) returns()
func (_SaiTub *SaiTubTransactor) SetPep(opts *bind.TransactOpts, pep_ common.Address) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "setPep", pep_)
}

// SetPep is a paid mutator transaction binding the contract method 0xd9c27cc6.
//
// Solidity: function setPep(address pep_) returns()
func (_SaiTub *SaiTubSession) SetPep(pep_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetPep(&_SaiTub.TransactOpts, pep_)
}

// SetPep is a paid mutator transaction binding the contract method 0xd9c27cc6.
//
// Solidity: function setPep(address pep_) returns()
func (_SaiTub *SaiTubTransactorSession) SetPep(pep_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetPep(&_SaiTub.TransactOpts, pep_)
}

// SetPip is a paid mutator transaction binding the contract method 0x82bf9a75.
//
// Solidity: function setPip(address pip_) returns()
func (_SaiTub *SaiTubTransactor) SetPip(opts *bind.TransactOpts, pip_ common.Address) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "setPip", pip_)
}

// SetPip is a paid mutator transaction binding the contract method 0x82bf9a75.
//
// Solidity: function setPip(address pip_) returns()
func (_SaiTub *SaiTubSession) SetPip(pip_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetPip(&_SaiTub.TransactOpts, pip_)
}

// SetPip is a paid mutator transaction binding the contract method 0x82bf9a75.
//
// Solidity: function setPip(address pip_) returns()
func (_SaiTub *SaiTubTransactorSession) SetPip(pip_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetPip(&_SaiTub.TransactOpts, pip_)
}

// SetVox is a paid mutator transaction binding the contract method 0xcf48d1a6.
//
// Solidity: function setVox(address vox_) returns()
func (_SaiTub *SaiTubTransactor) SetVox(opts *bind.TransactOpts, vox_ common.Address) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "setVox", vox_)
}

// SetVox is a paid mutator transaction binding the contract method 0xcf48d1a6.
//
// Solidity: function setVox(address vox_) returns()
func (_SaiTub *SaiTubSession) SetVox(vox_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetVox(&_SaiTub.TransactOpts, vox_)
}

// SetVox is a paid mutator transaction binding the contract method 0xcf48d1a6.
//
// Solidity: function setVox(address vox_) returns()
func (_SaiTub *SaiTubTransactorSession) SetVox(vox_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.SetVox(&_SaiTub.TransactOpts, vox_)
}

// Shut is a paid mutator transaction binding the contract method 0xb84d2106.
//
// Solidity: function shut(bytes32 cup) returns()
func (_SaiTub *SaiTubTransactor) Shut(opts *bind.TransactOpts, cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "shut", cup)
}

// Shut is a paid mutator transaction binding the contract method 0xb84d2106.
//
// Solidity: function shut(bytes32 cup) returns()
func (_SaiTub *SaiTubSession) Shut(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Shut(&_SaiTub.TransactOpts, cup)
}

// Shut is a paid mutator transaction binding the contract method 0xb84d2106.
//
// Solidity: function shut(bytes32 cup) returns()
func (_SaiTub *SaiTubTransactorSession) Shut(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Shut(&_SaiTub.TransactOpts, cup)
}

// Tab is a paid mutator transaction binding the contract method 0xf7c8d634.
//
// Solidity: function tab(bytes32 cup) returns(uint256)
func (_SaiTub *SaiTubTransactor) Tab(opts *bind.TransactOpts, cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "tab", cup)
}

// Tab is a paid mutator transaction binding the contract method 0xf7c8d634.
//
// Solidity: function tab(bytes32 cup) returns(uint256)
func (_SaiTub *SaiTubSession) Tab(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Tab(&_SaiTub.TransactOpts, cup)
}

// Tab is a paid mutator transaction binding the contract method 0xf7c8d634.
//
// Solidity: function tab(bytes32 cup) returns(uint256)
func (_SaiTub *SaiTubTransactorSession) Tab(cup [32]byte) (*types.Transaction, error) {
	return _SaiTub.Contract.Tab(&_SaiTub.TransactOpts, cup)
}

// Turn is a paid mutator transaction binding the contract method 0x7e74325f.
//
// Solidity: function turn(address tap_) returns()
func (_SaiTub *SaiTubTransactor) Turn(opts *bind.TransactOpts, tap_ common.Address) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "turn", tap_)
}

// Turn is a paid mutator transaction binding the contract method 0x7e74325f.
//
// Solidity: function turn(address tap_) returns()
func (_SaiTub *SaiTubSession) Turn(tap_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.Turn(&_SaiTub.TransactOpts, tap_)
}

// Turn is a paid mutator transaction binding the contract method 0x7e74325f.
//
// Solidity: function turn(address tap_) returns()
func (_SaiTub *SaiTubTransactorSession) Turn(tap_ common.Address) (*types.Transaction, error) {
	return _SaiTub.Contract.Turn(&_SaiTub.TransactOpts, tap_)
}

// Wipe is a paid mutator transaction binding the contract method 0x73b38101.
//
// Solidity: function wipe(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubTransactor) Wipe(opts *bind.TransactOpts, cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.contract.Transact(opts, "wipe", cup, wad)
}

// Wipe is a paid mutator transaction binding the contract method 0x73b38101.
//
// Solidity: function wipe(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubSession) Wipe(cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Wipe(&_SaiTub.TransactOpts, cup, wad)
}

// Wipe is a paid mutator transaction binding the contract method 0x73b38101.
//
// Solidity: function wipe(bytes32 cup, uint256 wad) returns()
func (_SaiTub *SaiTubTransactorSession) Wipe(cup [32]byte, wad *big.Int) (*types.Transaction, error) {
	return _SaiTub.Contract.Wipe(&_SaiTub.TransactOpts, cup, wad)
}

// SaiTubLogNewCupIterator is returned from FilterLogNewCup and is used to iterate over the raw logs and unpacked data for LogNewCup events raised by the SaiTub contract.
type SaiTubLogNewCupIterator struct {
	Event *SaiTubLogNewCup // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SaiTubLogNewCupIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SaiTubLogNewCup)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SaiTubLogNewCup)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SaiTubLogNewCupIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SaiTubLogNewCupIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SaiTubLogNewCup represents a LogNewCup event raised by the SaiTub contract.
type SaiTubLogNewCup struct {
	Lad common.Address
	Cup [32]byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterLogNewCup is a free log retrieval operation binding the contract event 0x89b8893b806db50897c8e2362c71571cfaeb9761ee40727f683f1793cda9df16.
//
// Solidity: event LogNewCup(address indexed lad, bytes32 cup)
func (_SaiTub *SaiTubFilterer) FilterLogNewCup(opts *bind.FilterOpts, lad []common.Address) (*SaiTubLogNewCupIterator, error) {

	var ladRule []interface{}
	for _, ladItem := range lad {
		ladRule = append(ladRule, ladItem)
	}

	logs, sub, err := _SaiTub.contract.FilterLogs(opts, "LogNewCup", ladRule)
	if err != nil {
		return nil, err
	}
	return &SaiTubLogNewCupIterator{contract: _SaiTub.contract, event: "LogNewCup", logs: logs, sub: sub}, nil
}

// WatchLogNewCup is a free log subscription operation binding the contract event 0x89b8893b806db50897c8e2362c71571cfaeb9761ee40727f683f1793cda9df16.
//
// Solidity: event LogNewCup(address indexed lad, bytes32 cup)
func (_SaiTub *SaiTubFilterer) WatchLogNewCup(opts *bind.WatchOpts, sink chan<- *SaiTubLogNewCup, lad []common.Address) (event.Subscription, error) {

	var ladRule []interface{}
	for _, ladItem := range lad {
		ladRule = append(ladRule, ladItem)
	}

	logs, sub, err := _SaiTub.contract.WatchLogs(opts, "LogNewCup", ladRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SaiTubLogNewCup)
				if err := _SaiTub.contract.UnpackLog(event, "LogNewCup", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogNewCup is a log parse operation binding the contract event 0x89b8893b806db50897c8e2362c71571cfaeb9761ee40727f683f1793cda9df16.
//
// Solidity: event LogNewCup(address indexed lad, bytes32 cup)
func (_SaiTub *SaiTubFilterer) ParseLogNewCup(log types.Log) (*SaiTubLogNewCup, error) {
	event := new(SaiTubLogNewCup)
	if err := _SaiTub.contract.UnpackLog(event, "LogNewCup", log); err != nil {
		return nil, err
	}
	return event, nil
}

// SaiTubLogSetAuthorityIterator is returned from FilterLogSetAuthority and is used to iterate over the raw logs and unpacked data for LogSetAuthority events raised by the SaiTub contract.
type SaiTubLogSetAuthorityIterator struct {
	Event *SaiTubLogSetAuthority // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SaiTubLogSetAuthorityIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SaiTubLogSetAuthority)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SaiTubLogSetAuthority)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SaiTubLogSetAuthorityIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SaiTubLogSetAuthorityIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SaiTubLogSetAuthority represents a LogSetAuthority event raised by the SaiTub contract.
type SaiTubLogSetAuthority struct {
	Authority common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterLogSetAuthority is a free log retrieval operation binding the contract event 0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4.
//
// Solidity: event LogSetAuthority(address indexed authority)
func (_SaiTub *SaiTubFilterer) FilterLogSetAuthority(opts *bind.FilterOpts, authority []common.Address) (*SaiTubLogSetAuthorityIterator, error) {

	var authorityRule []interface{}
	for _, authorityItem := range authority {
		authorityRule = append(authorityRule, authorityItem)
	}

	logs, sub, err := _SaiTub.contract.FilterLogs(opts, "LogSetAuthority", authorityRule)
	if err != nil {
		return nil, err
	}
	return &SaiTubLogSetAuthorityIterator{contract: _SaiTub.contract, event: "LogSetAuthority", logs: logs, sub: sub}, nil
}

// WatchLogSetAuthority is a free log subscription operation binding the contract event 0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4.
//
// Solidity: event LogSetAuthority(address indexed authority)
func (_SaiTub *SaiTubFilterer) WatchLogSetAuthority(opts *bind.WatchOpts, sink chan<- *SaiTubLogSetAuthority, authority []common.Address) (event.Subscription, error) {

	var authorityRule []interface{}
	for _, authorityItem := range authority {
		authorityRule = append(authorityRule, authorityItem)
	}

	logs, sub, err := _SaiTub.contract.WatchLogs(opts, "LogSetAuthority", authorityRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SaiTubLogSetAuthority)
				if err := _SaiTub.contract.UnpackLog(event, "LogSetAuthority", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogSetAuthority is a log parse operation binding the contract event 0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4.
//
// Solidity: event LogSetAuthority(address indexed authority)
func (_SaiTub *SaiTubFilterer) ParseLogSetAuthority(log types.Log) (*SaiTubLogSetAuthority, error) {
	event := new(SaiTubLogSetAuthority)
	if err := _SaiTub.contract.UnpackLog(event, "LogSetAuthority", log); err != nil {
		return nil, err
	}
	return event, nil
}

// SaiTubLogSetOwnerIterator is returned from FilterLogSetOwner and is used to iterate over the raw logs and unpacked data for LogSetOwner events raised by the SaiTub contract.
type SaiTubLogSetOwnerIterator struct {
	Event *SaiTubLogSetOwner // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SaiTubLogSetOwnerIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SaiTubLogSetOwner)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SaiTubLogSetOwner)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SaiTubLogSetOwnerIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SaiTubLogSetOwnerIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SaiTubLogSetOwner represents a LogSetOwner event raised by the SaiTub contract.
type SaiTubLogSetOwner struct {
	Owner common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogSetOwner is a free log retrieval operation binding the contract event 0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94.
//
// Solidity: event LogSetOwner(address indexed owner)
func (_SaiTub *SaiTubFilterer) FilterLogSetOwner(opts *bind.FilterOpts, owner []common.Address) (*SaiTubLogSetOwnerIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _SaiTub.contract.FilterLogs(opts, "LogSetOwner", ownerRule)
	if err != nil {
		return nil, err
	}
	return &SaiTubLogSetOwnerIterator{contract: _SaiTub.contract, event: "LogSetOwner", logs: logs, sub: sub}, nil
}

// WatchLogSetOwner is a free log subscription operation binding the contract event 0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94.
//
// Solidity: event LogSetOwner(address indexed owner)
func (_SaiTub *SaiTubFilterer) WatchLogSetOwner(opts *bind.WatchOpts, sink chan<- *SaiTubLogSetOwner, owner []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _SaiTub.contract.WatchLogs(opts, "LogSetOwner", ownerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SaiTubLogSetOwner)
				if err := _SaiTub.contract.UnpackLog(event, "LogSetOwner", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogSetOwner is a log parse operation binding the contract event 0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94.
//
// Solidity: event LogSetOwner(address indexed owner)
func (_SaiTub *SaiTubFilterer) ParseLogSetOwner(log types.Log) (*SaiTubLogSetOwner, error) {
	event := new(SaiTubLogSetOwner)
	if err := _SaiTub.contract.UnpackLog(event, "LogSetOwner", log); err != nil {
		return nil, err
	}
	return event, nil
}
